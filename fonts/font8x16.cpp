#include "font8x16.hpp"

// ASCII символы (0x20-0x7F)
static const uint8_t font8x16_ascii[][16] = {
    // Пробел (0x20)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // ! (0x21)
    {0x00, 0x00, 0x18, 0x3C, 0x3C, 0x3C, 0x18, 0x18, 
     0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    // " (0x22)
    {0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // # (0x23)
    {0x00, 0x00, 0x00, 0x6C, 0x6C, 0xFE, 0x6C, 0x6C, 
     0x6C, 0xFE, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00},
    // $ (0x24)
    {0x00, 0x10, 0x10, 0x7C, 0xD6, 0xD0, 0xD0, 0x7C, 
     0x16, 0x16, 0xD6, 0x7C, 0x10, 0x10, 0x00, 0x00},
    // % (0x25)
    {0x00, 0x00, 0x00, 0x00, 0xC2, 0xC6, 0x0C, 0x18, 
     0x30, 0x60, 0xC6, 0x86, 0x00, 0x00, 0x00, 0x00},
    // & (0x26)
    {0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x76, 0xDC, 
     0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00},
    // ' (0x27)
    {0x00, 0x30, 0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // ( (0x28)
    {0x00, 0x00, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 
     0x30, 0x30, 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00},
    // ) (0x29)
    {0x00, 0x00, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x0C, 
     0x0C, 0x0C, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00},
    // * (0x2A)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x3C, 0xFF, 
     0x3C, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // + (0x2B)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7E, 
     0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // , (0x2C)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00},
    // - (0x2D)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // . (0x2E)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    // / (0x2F)
    {0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0C, 0x18, 
     0x30, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00},
    // 0 (0x30)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xCE, 0xDE, 0xF6, 
     0xE6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // 1 (0x31)
    {0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 
     0x18, 0x18, 0x18, 0x7E, 0x00, 0x00, 0x00, 0x00},
    // 2 (0x32)
    {0x00, 0x00, 0x7C, 0xC6, 0x06, 0x0C, 0x18, 0x30, 
     0x60, 0xC0, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // 3 (0x33)
    {0x00, 0x00, 0x7C, 0xC6, 0x06, 0x06, 0x3C, 0x06, 
     0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // 4 (0x34)
    {0x00, 0x00, 0x0C, 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 
     0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00, 0x00},
    // 5 (0x35)
    {0x00, 0x00, 0xFE, 0xC0, 0xC0, 0xC0, 0xFC, 0x06, 
     0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // 6 (0x36)
    {0x00, 0x00, 0x38, 0x60, 0xC0, 0xC0, 0xFC, 0xC6, 
     0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // 7 (0x37)
    {0x00, 0x00, 0xFE, 0xC6, 0x06, 0x06, 0x0C, 0x18, 
     0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00},
    // 8 (0x38)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0xC6, 
     0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // 9 (0x39)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 
     0x06, 0x06, 0x0C, 0x78, 0x00, 0x00, 0x00, 0x00},    // : (0x3A)
    {0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 
     0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},
    // ; (0x3B)
    {0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 
     0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00},
    // < (0x3C)
    {0x00, 0x00, 0x00, 0x06, 0x0C, 0x18, 0x30, 0x60, 
     0x30, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00},
    // = (0x3D)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 
     0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // > (0x3E)
    {0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0C, 0x06, 
     0x0C, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00},
    // ? (0x3F)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x0C, 0x18, 0x18, 
     0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    // @ (0x40)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xDE, 0xDE, 0xDE, 
     0xDC, 0xC0, 0xC0, 0x7C, 0x00, 0x00, 0x00, 0x00},    // A (0x41)
    {0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // B (0x42)
    {0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x66, 
     0x66, 0x66, 0x66, 0xFC, 0x00, 0x00, 0x00, 0x00},
    // C (0x43)
    {0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xC0, 
     0xC0, 0xC2, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // D (0x44)
    {0x00, 0x00, 0xF8, 0x6C, 0x66, 0x66, 0x66, 0x66, 
     0x66, 0x66, 0x6C, 0xF8, 0x00, 0x00, 0x00, 0x00},
    // E (0x45)
    {0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 
     0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // F (0x46)
    {0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 
     0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00},
    // G (0x47)
    {0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xDE, 
     0xC6, 0xC6, 0x66, 0x3A, 0x00, 0x00, 0x00, 0x00},
    // H (0x48)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // I (0x49)
    {0x00, 0x00, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 
     0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // J (0x4A)
    {0x00, 0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 
     0xCC, 0xCC, 0xCC, 0x78, 0x00, 0x00, 0x00, 0x00},
    // K (0x4B)
    {0x00, 0x00, 0xE6, 0x66, 0x6C, 0x78, 0x70, 0x78, 
     0x6C, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00},
    // L (0x4C)
    {0x00, 0x00, 0xF0, 0x60, 0x60, 0x60, 0x60, 0x60, 
     0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // M (0x4D)
    {0x00, 0x00, 0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // N (0x4E)
    {0x00, 0x00, 0xC6, 0xE6, 0xF6, 0xFE, 0xDE, 0xCE, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // O (0x4F)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // P (0x50)
    {0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x60, 
     0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00},
    // Q (0x51)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 
     0xC6, 0xD6, 0xDE, 0x7C, 0x0C, 0x0E, 0x00, 0x00},
    // R (0x52)
    {0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x6C, 
     0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00},
    // S (0x53)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x60, 0x38, 0x0C, 
     0x06, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // T (0x54)
    {0x00, 0x00, 0x7E, 0x7E, 0x5A, 0x18, 0x18, 0x18, 
     0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // U (0x55)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // V (0x56)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 
     0xC6, 0x6C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00},
    // W (0x57)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xD6, 
     0xD6, 0xFE, 0xEE, 0x6C, 0x00, 0x00, 0x00, 0x00},
    // X (0x58)
    {0x00, 0x00, 0xC6, 0xC6, 0x6C, 0x7C, 0x38, 0x38, 
     0x7C, 0x6C, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // Y (0x59)
    {0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 
     0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // Z (0x5A)
    {0x00, 0x00, 0xFE, 0xC6, 0x86, 0x0C, 0x18, 0x30, 
     0x60, 0xC2, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // [ (0x5B)
    {0x00, 0x00, 0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 
     0x30, 0x30, 0x30, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // \ (0x5C)
    {0x00, 0x00, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x18, 
     0x0C, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00},
    // ] (0x5D)
    {0x00, 0x00, 0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 
     0x0C, 0x0C, 0x0C, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // ^ (0x5E)
    {0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // _ (0x5F)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00},
    // ` (0x60)
    {0x00, 0x30, 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // a (0x61)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0C, 0x7C, 
     0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00},
    // b (0x62)
    {0x00, 0x00, 0xE0, 0x60, 0x60, 0x78, 0x6C, 0x66, 
     0x66, 0x66, 0x66, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // c (0x63)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC0, 
     0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // d (0x64)
    {0x00, 0x00, 0x1C, 0x0C, 0x0C, 0x3C, 0x6C, 0xCC, 
     0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00},
    // e (0x65)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xFE, 
     0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // f (0x66)
    {0x00, 0x00, 0x38, 0x6C, 0x64, 0x60, 0xF0, 0x60, 
     0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00},
    // g (0x67)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 
     0xCC, 0x7C, 0x0C, 0xCC, 0x78, 0x00, 0x00, 0x00},
    // h (0x68)
    {0x00, 0x00, 0xE0, 0x60, 0x60, 0x6C, 0x76, 0x66, 
     0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00},
    // i (0x69)
    {0x00, 0x00, 0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 
     0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // j (0x6A)
    {0x00, 0x00, 0x06, 0x06, 0x00, 0x0E, 0x06, 0x06, 
     0x06, 0x06, 0x06, 0x66, 0x3C, 0x00, 0x00, 0x00},
    // k (0x6B)
    {0x00, 0x00, 0xE0, 0x60, 0x60, 0x66, 0x6C, 0x78, 
     0x6C, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00},
    // l (0x6C)
    {0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 
     0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // m (0x6D)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0xFE, 0xD6, 
     0xD6, 0xD6, 0xD6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // n (0x6E)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 
     0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00},
    // o (0x6F)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // p (0x70)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 
     0x66, 0x66, 0x7C, 0x60, 0xF0, 0x00, 0x00, 0x00},
    // q (0x71)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 
     0xCC, 0xCC, 0x7C, 0x0C, 0x1E, 0x00, 0x00, 0x00},
    // r (0x72)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x76, 0x66, 
     0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00},
    // s (0x73)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0x70, 
     0x1C, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // t (0x74)
    {0x00, 0x00, 0x10, 0x30, 0x30, 0xFC, 0x30, 0x30, 
     0x30, 0x30, 0x36, 0x1C, 0x00, 0x00, 0x00, 0x00},
    // u (0x75)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 
     0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00},
    // v (0x76)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 
     0xC6, 0x6C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00},
    // w (0x77)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xD6, 
     0xD6, 0xD6, 0xFE, 0x6C, 0x00, 0x00, 0x00, 0x00},
    // x (0x78)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x6C, 0x38, 
     0x38, 0x6C, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // y (0x79)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 
     0xC6, 0x7E, 0x06, 0x0C, 0xF8, 0x00, 0x00, 0x00},
    // z (0x7A)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xCC, 0x18, 
     0x30, 0x66, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // { (0x7B)
    {0x00, 0x00, 0x0E, 0x18, 0x18, 0x18, 0x70, 0x18, 
     0x18, 0x18, 0x18, 0x0E, 0x00, 0x00, 0x00, 0x00},
    // | (0x7C)
    {0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 
     0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    // } (0x7D)
    {0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0E, 0x18, 
     0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00, 0x00},
    // ~ (0x7E)
    {0x00, 0x00, 0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // DEL (0x7F)
    {0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 
     0xC6, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00}
};

// Кириллические символы (0x0410-0x044F)
static const uint8_t font8x16_cyrillic[][16] = {
    // А (0x0410)
    {0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // Б (0x0411)
    {0x00, 0x00, 0xFE, 0x62, 0x60, 0x60, 0x7C, 0x66, 
     0x66, 0x66, 0x66, 0xFC, 0x00, 0x00, 0x00, 0x00},
    // В (0x0412)
    {0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x66, 
     0x66, 0x66, 0x66, 0xFC, 0x00, 0x00, 0x00, 0x00},
    // Г (0x0413)
    {0x00, 0x00, 0xFE, 0x66, 0x62, 0x60, 0x60, 0x60, 
     0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00},    // Д (0x0414)
    {0x00, 0x00, 0x1E, 0x36, 0x66, 0x66, 0x66, 0x66, 
     0x66, 0x66, 0xFF, 0xC3, 0x00, 0x00, 0x00, 0x00},
    // Е (0x0415)
    {0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 
     0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // Ж (0x0416)
    {0x00, 0x00, 0xC6, 0xD6, 0xD6, 0x6C, 0x38, 0x38, 
     0x6C, 0xD6, 0xD6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // З (0x0417)
    {0x00, 0x00, 0x7C, 0xC6, 0x06, 0x06, 0x3C, 0x06, 
     0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // И (0x0418)
    {0x00, 0x00, 0xC6, 0xC6, 0xCE, 0xDE, 0xF6, 0xE6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // Й (0x0419)
    {0x00, 0x6C, 0xC6, 0xC6, 0xCE, 0xDE, 0xF6, 0xE6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // К (0x041A)
    {0x00, 0x00, 0xE6, 0x66, 0x6C, 0x78, 0x70, 0x78, 
     0x6C, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00},
    // Л (0x041B)
    {0x00, 0x00, 0x1E, 0x36, 0x66, 0x66, 0x66, 0x66, 
     0x66, 0x66, 0x66, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // М (0x041C)
    {0x00, 0x00, 0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // Н (0x041D)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // О (0x041E)
    {0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // П (0x041F)
    {0x00, 0x00, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // Р (0x0420)
    {0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x60, 
     0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00},
    // С (0x0421)
    {0x00, 0x00, 0x7C, 0xC6, 0xC0, 0xC0, 0xC0, 0xC0, 
     0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // Т (0x0422)
    {0x00, 0x00, 0x7E, 0x7E, 0x5A, 0x18, 0x18, 0x18, 
     0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00},
    // У (0x0423)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 
     0x06, 0x0C, 0x18, 0xF0, 0x00, 0x00, 0x00, 0x00},
    // Ф (0x0424)
    {0x00, 0x00, 0x18, 0x18, 0x7E, 0xDB, 0xDB, 0xDB, 
     0xDB, 0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    // Х (0x0425)
    {0x00, 0x00, 0xC6, 0xC6, 0x6C, 0x6C, 0x38, 0x38, 
     0x6C, 0x6C, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // Ц (0x0426)
    {0x00, 0x00, 0xE6, 0x66, 0x66, 0x66, 0x66, 0x66, 
     0x66, 0x66, 0x7E, 0x06, 0x00, 0x00, 0x00, 0x00},
    // Ч (0x0427)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 
     0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00},
    // Ш (0x0428)
    {0x00, 0x00, 0xD6, 0xD6, 0xD6, 0xD6, 0xD6, 0xD6, 
     0xD6, 0xD6, 0xD6, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // Щ (0x0429)
    {0x00, 0x00, 0xD6, 0xD6, 0xD6, 0xD6, 0xD6, 0xD6, 
     0xD6, 0xD6, 0xFE, 0x02, 0x00, 0x00, 0x00, 0x00},
    // Ъ (0x042A)
    {0x00, 0x00, 0xF0, 0x60, 0x60, 0x60, 0x7C, 0x66, 
     0x66, 0x66, 0x66, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // Ы (0x042B)
    {0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xF6, 0xDE, 
     0xDE, 0xDE, 0xDE, 0xF6, 0x00, 0x00, 0x00, 0x00},
    // Ь (0x042C)
    {0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xFC, 0xC6, 
     0xC6, 0xC6, 0xC6, 0xFC, 0x00, 0x00, 0x00, 0x00},
    // Э (0x042D)
    {0x00, 0x00, 0x7C, 0xC6, 0x06, 0x06, 0x3E, 0x06, 
     0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // Ю (0x042E)
    {0x00, 0x00, 0xCC, 0xD6, 0xD6, 0xD6, 0xF6, 0xD6, 
     0xD6, 0xD6, 0xD6, 0xCC, 0x00, 0x00, 0x00, 0x00},
    // Я (0x042F)
    {0x00, 0x00, 0x7E, 0xC6, 0xC6, 0xC6, 0x7E, 0x36, 
     0x66, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    
    // Строчные буквы (0x0430-0x044F)
    // а (0x0430)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x06, 0x7E, 
     0xC6, 0xC6, 0xC6, 0x7E, 0x00, 0x00, 0x00, 0x00},    // б (0x0431)
    {0x00, 0x00, 0x7E, 0x60, 0x60, 0x7C, 0x66, 0x66, 
     0x66, 0x66, 0x66, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // в (0x0432)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x66, 0x66, 
     0x7C, 0x66, 0x66, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // г (0x0433)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x60, 0x60, 
     0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00},
    // д (0x0434)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x66, 0x66, 
     0x66, 0x66, 0x7F, 0xC3, 0x00, 0x00, 0x00, 0x00},    // е (0x0435)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xFE, 
     0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // ж (0x0436)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xD6, 0x6C, 
     0x38, 0x6C, 0xD6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // з (0x0437)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x06, 0x06, 
     0x3C, 0x06, 0x06, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // и (0x0438)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xCE, 0xDE, 
     0xF6, 0xE6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // й (0x0439)
    {0x00, 0x00, 0x6C, 0x00, 0x00, 0xC6, 0xCE, 0xDE, 
     0xF6, 0xE6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // к (0x043A)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xD8, 0xF0, 
     0xF0, 0xD8, 0xCC, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // л (0x043B)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x66, 0x66, 
     0x66, 0x66, 0x66, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // м (0x043C)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xEE, 0xFE, 
     0xD6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // н (0x043D)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xFE, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // о (0x043E)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // п (0x043F)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC6, 0xC6, 
     0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // р (0x0440)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xC6, 0xC6, 
     0xC6, 0xFC, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00},
    // с (0x0441)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC0, 
     0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // т (0x0442)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x18, 0x18, 
     0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    // у (0x0443)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 
     0xC6, 0x7E, 0x06, 0x0C, 0x78, 0x00, 0x00, 0x00},
    // ф (0x0444)
    {0x00, 0x00, 0x00, 0x18, 0x18, 0x7E, 0xDB, 0xDB, 
     0xDB, 0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00},
    // х (0x0445)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x6C, 0x38, 
     0x38, 0x6C, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00},
    // ц (0x0446)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x66, 0x66, 
     0x66, 0x66, 0x7E, 0x06, 0x00, 0x00, 0x00, 0x00},
    // ч (0x0447)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 
     0x7E, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00},
    // ш (0x0448)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xD6, 0xD6, 0xD6, 
     0xD6, 0xD6, 0xD6, 0xFE, 0x00, 0x00, 0x00, 0x00},
    // щ (0x0449)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xD6, 0xD6, 0xD6, 
     0xD6, 0xD6, 0xFE, 0x02, 0x00, 0x00, 0x00, 0x00},
    // ъ (0x044A)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x60, 0x7C, 
     0x66, 0x66, 0x66, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // ы (0x044B)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xF6, 
     0xDE, 0xDE, 0xDE, 0xF6, 0x00, 0x00, 0x00, 0x00},
    // ь (0x044C)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xFC, 
     0xC6, 0xC6, 0xC6, 0xFC, 0x00, 0x00, 0x00, 0x00},
    // э (0x044D)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x06, 0x06, 
     0x3E, 0x06, 0x06, 0x7C, 0x00, 0x00, 0x00, 0x00},
    // ю (0x044E)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xD6, 0xD6, 
     0xF6, 0xD6, 0xD6, 0xCC, 0x00, 0x00, 0x00, 0x00},
    // я (0x044F)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0xC6, 0xC6, 
     0x7E, 0x36, 0x66, 0xC6, 0x00, 0x00, 0x00, 0x00},
};

// Отдельные символы
// Ё (0x0401)
static const uint8_t font8x16_yo_upper[16] = {
    0x00, 0x66, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 
    0x68, 0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00
};

// ё (0x0451)
static const uint8_t font8x16_yo_lower[16] = {
    0x00, 0x66, 0x00, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 
    0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Символ по умолчанию для неизвестных символов
static const uint8_t font8x16_unknown[16] = {
    0x00, 0x00, 0x7E, 0x42, 0x42, 0x5A, 0x5A, 0x42, 
    0x5A, 0x5A, 0x42, 0x7E, 0x00, 0x00, 0x00, 0x00
};

uint16_t UTF8_ToUnicode(const char* utf8_char, uint8_t* bytes_consumed) {
    uint8_t first_byte = static_cast<uint8_t>(utf8_char[0]);
    
    if ((first_byte & 0x80) == 0) {
        // ASCII символ (0xxxxxxx)
        *bytes_consumed = 1;
        return first_byte;
    } else if ((first_byte & 0xE0) == 0xC0) {
        // 2-байтовый символ (110xxxxx 10xxxxxx)
        if (utf8_char[1] == 0 || (utf8_char[1] & 0xC0) != 0x80) {
            *bytes_consumed = 1;
            return 0xFFFD; // Replacement character
        }
        *bytes_consumed = 2;
        return ((first_byte & 0x1F) << 6) | (utf8_char[1] & 0x3F);
    } else if ((first_byte & 0xF0) == 0xE0) {
        // 3-байтовый символ (1110xxxx 10xxxxxx 10xxxxxx)
        if (utf8_char[1] == 0 || utf8_char[2] == 0 ||
            (utf8_char[1] & 0xC0) != 0x80 || (utf8_char[2] & 0xC0) != 0x80) {
            *bytes_consumed = 1;
            return 0xFFFD; // Replacement character
        }
        *bytes_consumed = 3;
        return ((first_byte & 0x0F) << 12) | 
               ((utf8_char[1] & 0x3F) << 6) | 
               (utf8_char[2] & 0x3F);
    }
    
    *bytes_consumed = 1;
    return 0xFFFD; // Replacement character
}

bool UTF8_IsMultibyte(uint8_t first_byte) {
    return (first_byte & 0x80) != 0;
}

const uint8_t* Font8x16_GetChar(uint16_t unicode_char) {
    // ASCII символы
    if (unicode_char >= FONT8X16_ASCII_START && unicode_char <= FONT8X16_ASCII_END) {
        return font8x16_ascii[unicode_char - FONT8X16_ASCII_START];
    }
    
    // Кириллические символы
    if (unicode_char >= FONT8X16_CYRILLIC_START && unicode_char <= FONT8X16_CYRILLIC_END) {
        return font8x16_cyrillic[unicode_char - FONT8X16_CYRILLIC_START];
    }
    
    // Ё
    if (unicode_char == 0x0401) {
        return font8x16_yo_upper;
    }
    
    // ё
    if (unicode_char == 0x0451) {
        return font8x16_yo_lower;
    }
    
    // Неизвестный символ
    return font8x16_unknown;
}

const uint8_t* Font8x16_GetCharUTF8(const char* utf8_char, uint8_t* bytes_consumed) {
    uint16_t unicode = UTF8_ToUnicode(utf8_char, bytes_consumed);
    return Font8x16_GetChar(unicode);
}